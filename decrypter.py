

def find_invpow(x,n):

    """Finds the integer component of the n'th root of x,

    an integer such that y ** n <= x < (y + 1) ** n.

    """

    high = 1

    while high ** n <= x:

        high *= 2

    low = high/2

    while low < high:

        mid = (low + high) // 2

        if low < mid and mid**n < x:

            low = mid

        elif high > mid and mid**n > x:

            high = mid

        else:

            return mid

    return mid + 1

 

x=6542474227407209147879201867315400818949942305302611333274096415746629048312404545343260815311769764491020629030073020437421914417676907397127425460159424348227189662241115719746425885080959380147562610564006265754324592247358432923618333312072058671800300890636435740371989768580608882372883800834318263512481370715666325243687988774580443532769346644243436106673213083363402027470120332470323115260911578863735412860948872283250844644487277779705259752026459374574563698231993880299235268368248621815358860582277609926332334384576823806793245111147209751140305686817193280686421821699732879994868666666254506497949752572282804660506502642495179620335278503088593058549623938123360074837102670696534768144822960517578125

n=5

y = find_invpow(x,n)

print  (y)
